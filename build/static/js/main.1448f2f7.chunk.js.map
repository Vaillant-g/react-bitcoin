{"version":3,"sources":["Components/DatePickers.js","Components/BitcoinLineChart.js","Components/Display.js","Components/DisplayBetween.js","Components/CurrentBitcoinValue.js","App.js","reportWebVitals.js","index.js"],"names":["DatePickers","props","Row","Col","InputGroup","className","Prepend","Text","id","value","onChange","e","changeDateStart","target","type","startDate","changeDateEnd","endDate","BitcoinLineChart","chartRef","React","createRef","width","height","data","this","margin","top","right","bottom","left","dataKey","stroke","dot","strokeDasharray","Component","Display","newData","Object","keys","map","key","date","DisplayBetween","CurrentBitcoinValue","UsdValue","currentValue","USD","rate","EurValue","EUR","GbpValue","GBP","icon","faEuroSign","faDollarSign","faPoundSign","Button","variant","onClick","reloadPrice","faRedoAlt","App","loadMonthData","axios","get","then","response","setState","monthData","bpi","catch","error","console","log","loadCurrentBitcoinPrice","setStartDate","newStartDate","loadBetweenData","setEndDate","newEndDate","state","betweenData","Container","href","faGithub","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1448f2f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { InputGroup, Row, Col, Container } from 'react-bootstrap';\r\n\r\nexport default function DatePickers(props) {\r\n    const onChangeStart = (e) => {\r\n        props.changeDateStart(e.target.value);\r\n    }\r\n\r\n    const onChangeEnd = (e) => {\r\n        props.changeDateEnd(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"inputGroup-sizing-default\">Start Date</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <input value onChange={onChangeStart} type='date' className=\"form-control\" value={props.startDate}></input>\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"inputGroup-sizing-default\">End Date</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <input value onChange={onChangeEnd} type='date' className=\"form-control\" value={props.endDate}></input>\r\n                    </InputGroup>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n} from \"recharts\";\r\n\r\nclass BitcoinLineChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.chartRef = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate() {}\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <LineChart\r\n          width={1050}\r\n          height={300}\r\n          data={this.props.data}\r\n          margin={{ top: 5, right: 5, bottom: 5, left: 0 }}\r\n        >\r\n          <Line type=\"natural\" dataKey=\"value\" stroke=\"#8884d8\" dot={false}/>\r\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis dataKey=\"value\" />\r\n          <Tooltip />\r\n        </LineChart>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BitcoinLineChart;\r\n","import React from \"react\";\r\nimport BitcoinLineChart from \"./BitcoinLineChart\";\r\n\r\nexport default function Display(props) {\r\n  if (!props.data) return null;\r\n  const data = props.data;\r\n\r\n  const newData = Object.keys(data).map((key) => ({\r\n    date: key,\r\n    value: data[key],\r\n  }));\r\n\r\n  return (\r\n    <>\r\n    <h2>Evolution of Bitcoin's price over the past month</h2>\r\n      <div className=\"shadow-lg p-3 mb-5 bg-white rounded contentdiv\">\r\n        <BitcoinLineChart data={newData}></BitcoinLineChart>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport BitcoinLineChart from \"./BitcoinLineChart\";\r\n\r\nexport default function DisplayBetween(props) {\r\n  if (!props.data) return null;\r\n  const data = props.data;\r\n\r\n  const newData = Object.keys(data).map((key) => ({\r\n    date: key,\r\n    value: data[key],\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        Evolution of Bitcoin's price between {props.startDate} and{\" \"}\r\n        {props.endDate}\r\n      </h2>\r\n      <div className=\"shadow-lg p-3 mb-5 bg-white rounded contentdiv\">\r\n        <BitcoinLineChart data={newData}></BitcoinLineChart>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEuroSign,\r\n  faDollarSign,\r\n  faPoundSign,\r\n  faRedoAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Row, Col, Button } from \"react-bootstrap\";\r\n\r\nexport default function CurrentBitcoinValue(props) {\r\n  const UsdValue = props.currentValue ? props.currentValue.USD.rate : \"\";\r\n  const EurValue = props.currentValue ? props.currentValue.EUR.rate : \"\";\r\n  const GbpValue = props.currentValue ? props.currentValue.GBP.rate : \"\";\r\n\r\n  return (\r\n    <div className=\"CurrentBitcoinValue \">\r\n      <h2>Current Bitcoin price</h2>\r\n      <div className=\"shadow-lg p-3 mb-5 bg-white rounded contentdiv\">\r\n        <Row>\r\n          <Col className=\"alignLeft\">\r\n            <FontAwesomeIcon icon={faEuroSign} />\r\n            <span> {EurValue}</span>\r\n          </Col>\r\n          <Col className=\"alignCenter\">\r\n            <FontAwesomeIcon icon={faDollarSign} />\r\n            <span> {UsdValue}</span>\r\n          </Col>\r\n          <Col className=\"alignRight\">\r\n            <FontAwesomeIcon icon={faPoundSign} />\r\n            <span> {GbpValue}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <hr className=\"separator\" />\r\n            {/* <Button\r\n              variant=\"\"\r\n              className=\"reloadButton\"\r\n              onClick={props.reloadPrice}\r\n            >\r\n              <FontAwesomeIcon icon={faRedoAlt} /> <span> Reload</span>\r\n            </Button> */}\r\n            <div className=\"reloadDiv\">\r\n              <Button\r\n                variant=\"\"\r\n                className=\"reloadButton\"\r\n                onClick={props.reloadPrice}\r\n              >\r\n                <FontAwesomeIcon icon={faRedoAlt} /> <span> Reload</span>\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport DatePickers from \"./Components/DatePickers\";\r\nimport Display from \"./Components/Display\";\r\nimport DisplayBetween from \"./Components/DisplayBetween\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport CurrentBitcoinValue from \"./Components/CurrentBitcoinValue\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      monthData: null,\r\n      betweenData: null,\r\n      currentValue: 0,\r\n      startDate: \"2020-01-01\",\r\n      endDate: \"2020-12-18\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadMonthData();\r\n    this.loadCurrentBitcoinPrice();\r\n    this.loadBetweenData();\r\n  }\r\n\r\n  loadMonthData = () => {\r\n    axios\r\n      .get(\"https://api.coindesk.com/v1/bpi/historical/close.json\")\r\n      .then((response) => {\r\n        this.setState({ monthData: response.data.bpi });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .then(function () {});\r\n  };\r\n\r\n  loadCurrentBitcoinPrice = () => {\r\n    axios\r\n      .get(\"https://api.coindesk.com/v1/bpi/currentprice.json\")\r\n      .then((response) => {\r\n        this.setState({ currentValue: response.data.bpi });\r\n      })\r\n      .catch(function (error) {\r\n      });\r\n  };\r\n\r\n  setStartDate = (newStartDate) => {\r\n    this.setState({ startDate: newStartDate });\r\n    this.loadBetweenData();\r\n  };\r\n\r\n  setEndDate = (newEndDate) => {\r\n    this.setState({ endDate: newEndDate });\r\n    this.loadBetweenData();\r\n  };\r\n\r\n  loadBetweenData = () => {\r\n    axios\r\n      .get(\r\n        \"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" +\r\n          this.state.startDate +\r\n          \"&end=\" +\r\n          this.state.endDate\r\n      )\r\n      .then((response) => {\r\n        this.setState({ betweenData: response.data.bpi });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container className=\"App\">\r\n          <Row>\r\n            <Col>\r\n              <h1>React-Bitcoin</h1>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <CurrentBitcoinValue\r\n                currentValue={this.state.currentValue}\r\n                reloadPrice={this.loadCurrentBitcoinPrice}\r\n              ></CurrentBitcoinValue>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Display data={this.state.monthData}></Display>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <DatePickers\r\n                changeDateStart={this.setStartDate}\r\n                changeDateEnd={this.setEndDate}\r\n                startDate={this.state.startDate}\r\n                endDate={this.state.endDate}\r\n              ></DatePickers>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <DisplayBetween\r\n                startDate={this.state.startDate}\r\n                endDate={this.state.endDate}\r\n                data={this.state.betweenData}\r\n              ></DisplayBetween>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <footer className=\"bg-light text-center text-lg-start fixed-bottom\">\r\n          <div className=\"text-center p-3\">\r\n            Gautier Vaillant 2020{\" \"}\r\n            <a href=\"https://github.com/Vaillant-g\">\r\n              <FontAwesomeIcon icon={faGithub} />\r\n            </a>\r\n            <span>\r\n              {\" | \"}\r\n              {/* https://www.coindesk.com/coindesk-api */}\r\n              Powered by\r\n              <a href=\"https://www.coindesk.com/price/bitcoin\"> CoinDesk</a>'s\r\n              API\r\n            </span>\r\n          </div>\r\n        </footer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}